// Messages used to implement Remote Procedure Calls


import "Log.proto";

package urpc.pb;

// ZMQ Request-reply pattern
//  single-part: ZMQ_REQ, ZMQ_REP
//  multi-part: ZMQ_SNDMORE, ZMQ_RCVMORE

message Request {
  optional string service = 1;        // Serivce called
  optional int32 version = 2;         // Version of the api
  optional bytes message = 3;         // Protobuf for service's request
}
message Response {
  optional bool error = 1;            // True if error occured
  optional bytes message = 2;         // Protobuf of selected response
  repeated Log log = 3;               // Any additional error messages
}

// ZMQ Publish-subscribe pattern
//  ZMQ_PUB, ZMQ_SUB

// ZMQ Peer to Peer pattern
//  ZMQ_P2P

// ZMQ Parallelized pipeline pattern
//  ZMQ_UPSTREAM, ZMQ_DOWNSTREAM

// Server Record

message Server {
  message Record {
    enum Protocol {
      TCP = 1;
      UDP = 2;
    }
    optional string service = 1;    // symbolic name e.g. http
    optional Protocol protocol = 2; // transport protocol 
    optional string name = 3;       // domain name
    optional int32 ttl = 4;         // time to live field
    optional int32 priority = 5;    // target priority, lower is more preferred
    optional int32 weight = 6;      // relative weight for given priority
    optional int32 port = 7;        // service port
    optional string target = 8;     // canonical hostname 
  }
  repeated Record record = 1;
}
