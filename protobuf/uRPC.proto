// Messages used to implement Remote Procedure Calls


import "Log.proto";

package urpc.pb;

// ZMQ Request-reply pattern
//  single-part: ZMQ_REQ, ZMQ_REP
//  multi-part: ZMQ_SNDMORE, ZMQ_RCVMORE

message Request {
  optional string service = 1;        // Serivce called
  optional int32 version = 2;         // Version of the api
  optional bytes message = 3;         // Protobuf for service's request
}
message Response {
  optional bool error = 1;            // True if error occured
  optional bytes message = 2;         // Protobuf of selected response
  repeated Log log = 3;               // Any additional error messages
}

// ZMQ Publish-subscribe pattern
//  ZMQ_PUB, ZMQ_SUB
message Subscribe {
  optional int32 version = 1;

}

// ZMQ Peer to Peer pattern
//  ZMQ_P2P

// ZMQ Parallelized pipeline pattern
//  ZMQ_UPSTREAM, ZMQ_DOWNSTREAM



// RPC: Service Listing (service='GetServer', version=1, message=NULL)
// Response: ServerList

message ServerList {
  message Server {
    optional string name = 1;         // Fully qualified domain name
    optional int32 port = 2;          // Port
    optional int32 priority = 3;      // Prefer server with lowest priority
  }
  repeated Server server = 1;
}

message KeyValueSeries {
  message KeyValue {
    enum valueType {
      STRING = 1;
      DOUBLE = 2;
      INT32 = 3;
    }
    optional string key = 1;
    optional bytes value = 2;
  }
  repeated KeyValue keyValue = 1;
}
