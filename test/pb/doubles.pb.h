// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: doubles.proto

#ifndef PROTOBUF_doubles_2eproto__INCLUDED
#define PROTOBUF_doubles_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace urpc {
namespace test {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_doubles_2eproto();
void protobuf_AssignDesc_doubles_2eproto();
void protobuf_ShutdownFile_doubles_2eproto();

class Array;

// ===================================================================

class Array : public ::google::protobuf::Message {
 public:
  Array();
  virtual ~Array();
  
  Array(const Array& from);
  
  inline Array& operator=(const Array& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Array& default_instance();
  
  void Swap(Array* other);
  
  // implements Message ----------------------------------------------
  
  Array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Array& from);
  void MergeFrom(const Array& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated double r = 1;
  inline int r_size() const;
  inline void clear_r();
  static const int kRFieldNumber = 1;
  inline double r(int index) const;
  inline void set_r(int index, double value);
  inline void add_r(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      r() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_r();
  
  // @@protoc_insertion_point(class_scope:urpc.test.pb.Array)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< double > r_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_doubles_2eproto();
  friend void protobuf_AssignDesc_doubles_2eproto();
  friend void protobuf_ShutdownFile_doubles_2eproto();
  
  void InitAsDefaultInstance();
  static Array* default_instance_;
};
// ===================================================================


// ===================================================================

// Array

// repeated double r = 1;
inline int Array::r_size() const {
  return r_.size();
}
inline void Array::clear_r() {
  r_.Clear();
}
inline double Array::r(int index) const {
  return r_.Get(index);
}
inline void Array::set_r(int index, double value) {
  r_.Set(index, value);
}
inline void Array::add_r(double value) {
  r_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
Array::r() const {
  return r_;
}
inline ::google::protobuf::RepeatedField< double >*
Array::mutable_r() {
  return &r_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace test
}  // namespace urpc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_doubles_2eproto__INCLUDED
